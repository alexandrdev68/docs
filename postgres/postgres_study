How can you produce a list of the start times for bookings for tennis courts, for the date '2012-09-21'? Return a list of start time and facility name pairings, ordered by the time.

SELECT boo.starttime, fac.name FROM cd.bookings boo 
INNER JOIN cd.facilities fac ON fac.facid = boo.facid 
WHERE boo.starttime BETWEEN '2012-09-21' AND '2012-09-22' 
AND fac.name LIKE 'Tennis Court%'
ORDER BY boo.starttime ASC


How can you output a list of all members who have recommended another member? Ensure that there are no duplicates in the list, and that results are ordered by (surname, firstname).

SELECT DISTINCT mem1.firstname, mem1.surname FROM cd.members mem 
INNER JOIN cd.members mem1 ON mem1.memid = mem.recommendedby 
ORDER BY mem1.surname, mem1.firstname


How can you output a list of all members, including the individual who recommended them (if any)? Ensure that results are ordered by (surname, firstname).

SELECT mem.firstname, mem.surname, mem1.firstname, mem1.surname FROM cd.members mem
LEFT OUTER JOIN cd.members mem1 
ON mem.recommendedby = mem1.memid
ORDER BY mem.surname, mem.firstname


How can you produce a list of all members who have used a tennis court? Include in your output the name of the court, and the name of the member formatted as a single column. Ensure no duplicate data, and order by the member name.

SELECT DISTINCT mem.firstname || ' ' || mem.surname as member, fac.name FROM cd.members mem 
INNER JOIN cd.bookings boo 
ON mem.memid = boo.memid
INNER JOIN cd.facilities fac 
ON boo.facid = fac.facid
WHERE fac.name LIKE 'Tennis Court%'
ORDER BY member


How can you produce a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30? Remember that guests have different costs to members (the listed costs are per half-hour 'slot'), and the guest user is always ID 0. Include in your output the name of the facility, the name of the member formatted as a single column, and the cost. Order by descending cost, and do not use any subqueries.

SELECT mem.firstname || ' ' || mem.surname as member, 
fac.name as facility,
CASE WHEN mem.memid = 0 THEN fac.guestcost * boo.slots
	ELSE fac.membercost * boo.slots
END as cost
FROM cd.members mem
INNER JOIN cd.bookings boo 
ON mem.memid = boo.memid
INNER JOIN cd.facilities fac 
ON boo.facid = fac.facid
WHERE 
CASE WHEN mem.memid = 0 THEN fac.guestcost * boo.slots > 30
	ELSE fac.membercost * boo.slots > 30 
END
	AND boo.starttime BETWEEN '2012-09-14' AND '2012-09-15' 
ORDER BY cost DESC


How can you output a list of all members, including the individual who recommended them (if any), without using any joins? Ensure that there are no duplicates in the list, and that each firstname + surname pairing is formatted as a column and ordered.

SELECT DISTINCT mem.firstname || ' ' || mem.surname as member, 
	(SELECT m.firstname || ' ' || m.surname as member 
	 FROM cd.members m 
	 WHERE m.memid = mem.recommendedby) as recommender
FROM cd.members mem
ORDER BY member ASC
